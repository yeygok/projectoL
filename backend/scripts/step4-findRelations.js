const pool = require('../config/db');

const findRelations = async () => {
  try {
    console.log('üîó PASO 4: ENCONTRANDO RELACIONES ENTRE TABLAS');
    console.log('=' .repeat(50));
    
    // Buscar columnas que terminan en _id (relaciones impl√≠citas)
    const [tables] = await pool.query('SHOW TABLES');
    const tableNames = tables.map(t => Object.values(t)[0]);
    
    console.log('üîç Analizando relaciones impl√≠citas (columnas *_id):\n');
    
    for (const tableName of tableNames.slice(0, 10)) { // Limitar a 10 tablas para no saturar
      try {
        const [columns] = await pool.query(`DESCRIBE ${tableName}`);
        const foreignKeys = columns.filter(col => 
          col.Field.endsWith('_id') && col.Field !== 'id'
        );
        
        if (foreignKeys.length > 0) {
          console.log(`üìã ${tableName}:`);
          foreignKeys.forEach(fk => {
            const referencedTable = fk.Field.replace('_id', '');
            const exists = tableNames.includes(referencedTable);
            console.log(`  ‚Ä¢ ${fk.Field} ‚Üí ${referencedTable} ${exists ? '‚úÖ' : '‚ùì'}`);
          });
          console.log('');
        }
        
      } catch (error) {
        console.log(`‚ùå Error al analizar ${tableName}: ${error.message}`);
      }
    }
    
    // Buscar Foreign Keys expl√≠citas (si existen)
    console.log('üîç Buscando Foreign Keys expl√≠citas:');
    try {
      const [foreignKeys] = await pool.query(`
        SELECT 
          TABLE_NAME,
          COLUMN_NAME,
          REFERENCED_TABLE_NAME,
          REFERENCED_COLUMN_NAME
        FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE 
        WHERE TABLE_SCHEMA = DATABASE() 
          AND REFERENCED_TABLE_NAME IS NOT NULL
        LIMIT 20
      `);
      
      if (foreignKeys.length > 0) {
        console.log('‚úÖ Foreign Keys encontradas:');
        foreignKeys.forEach(fk => {
          console.log(`  ‚Ä¢ ${fk.TABLE_NAME}.${fk.COLUMN_NAME} ‚Üí ${fk.REFERENCED_TABLE_NAME}.${fk.REFERENCED_COLUMN_NAME}`);
        });
      } else {
        console.log('‚ö†Ô∏è  No se encontraron Foreign Keys expl√≠citas');
      }
    } catch (error) {
      console.log(`‚ùå Error al buscar Foreign Keys: ${error.message}`);
    }
    
  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
  
  process.exit(0);
};

findRelations();
